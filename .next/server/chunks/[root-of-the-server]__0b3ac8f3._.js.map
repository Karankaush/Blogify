{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/lib/mongodb.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nexport async function connectDB() {\n  try {\n    if (mongoose.connection.readyState >= 1) {\n      console.log(\"Already connected\");\n      return;\n    }\n\n    console.log(\"Connecting to MongoDB...\");\n    await mongoose.connect(process.env.MONGO_URI);\n    console.log(\"MongoDB connected!\");\n    \n  } catch (err) {\n    console.error(\"MongoDB connection error:\", err);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,IAAI,oHAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;YACvC,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QAC5C,QAAQ,GAAG,CAAC;IAEd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/models/Blog.js"],"sourcesContent":["// models/Blog.js\nimport mongoose from \"mongoose\";\n\nconst BlogSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n  },\n  content: {\n    type: String,\n    required: true,\n  },\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"User\",\n    required: true,\n  },\n  views: {\n    type: Number,\n    default: 0,\n    required: true,   // ðŸ‘ˆ add this\n    min: 0,\n  },\n  likes :{\n    type : Number,\n    default : 0,\n    required : true\n  },\n\n  disLikes :{\n    type : Number,\n    default : 0,\n    required : true\n  },\n\n}, { timestamps: true });\n\nexport default mongoose.models.Blog || mongoose.model(\"Blog\", BlogSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,UAAU;IACZ;IACA,QAAQ;QACN,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,UAAU;QACV,KAAK;IACP;IACA,OAAO;QACL,MAAO;QACP,SAAU;QACV,UAAW;IACb;IAEA,UAAU;QACR,MAAO;QACP,SAAU;QACV,UAAW;IACb;AAEF,GAAG;IAAE,YAAY;AAAK;uCAEP,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/app/api/blogs/%5Bid%5D/like/route.js"],"sourcesContent":["// /app/api/views/[id]/route.js\nimport { connectDB } from \"@/lib/mongodb\";\nimport Blog from \"@/models/Blog\";\nimport { NextResponse } from \"next/server\";\n\nexport async function POST(req, { params }) {\n  await connectDB();\n  const id = ((await params).id);\n    console.log(id)\n    try {\n       const blog = await Blog.findByIdAndUpdate(\n  id,\n  { $inc: { likes: 1 } },\n  { new: true }\n);\n        \n\n        await blog.save();\n    return NextResponse.json({ success: true, blog });\n  } catch (err) {\n    return NextResponse.json({ success: false, error: err.message });\n  }\n}\n\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE;IACxC,MAAM,IAAA,oIAAS;IACf,MAAM,KAAM,CAAC,MAAM,MAAM,EAAE,EAAE;IAC3B,QAAQ,GAAG,CAAC;IACZ,IAAI;QACD,MAAM,OAAO,MAAM,kIAAI,CAAC,iBAAiB,CAC9C,IACA;YAAE,MAAM;gBAAE,OAAO;YAAE;QAAE,GACrB;YAAE,KAAK;QAAK;QAIN,MAAM,KAAK,IAAI;QACnB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,KAAK;QACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,IAAI,OAAO;QAAC;IAChE;AACF","debugId":null}}]
}