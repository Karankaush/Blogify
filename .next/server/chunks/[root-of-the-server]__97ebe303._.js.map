{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/lib/mongodb.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nexport async function connectDB() {\n  try {\n    if (mongoose.connection.readyState >= 1) {\n      console.log(\"Already connected\");\n      return;\n    }\n\n    console.log(\"Connecting to MongoDB...\");\n    await mongoose.connect(process.env.MONGO_URI);\n    console.log(\"MongoDB connected!\");\n    \n  } catch (err) {\n    console.error(\"MongoDB connection error:\", err);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,IAAI,oHAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;YACvC,QAAQ,GAAG,CAAC;YACZ;QACF;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QAC5C,QAAQ,GAAG,CAAC;IAEd,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/models/Blog.js"],"sourcesContent":["// models/Blog.js\nimport mongoose from \"mongoose\";\n\nconst BlogSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true,\n  },\n  content: {\n    type: String,\n    required: true,\n  },\n  userId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"User\",\n    required: true,\n  },\n  views: {\n    type: Number,\n    default: 0,\n    required: true,   \n    min: 0,\n  },\n   likes: {\n     type: Number,\n     default: 0,\n     required: true\n       },\n\n  dislikes: { \n    type: Number, \n    default: 0, \n    required: true \n  },   \n  likedBy: [{ \n    type: mongoose.Schema.Types.ObjectId, \n    ref: \"User\" \n  }],\n  dislikedBy: [{ \n    type: mongoose.Schema.Types.ObjectId, \n    ref: \"User\" \n  }],\n\n}, { timestamps: true });\n\nexport default mongoose.models.Blog || mongoose.model(\"Blog\", BlogSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,UAAU;IACZ;IACA,QAAQ;QACN,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,SAAS;QACT,UAAU;QACV,KAAK;IACP;IACC,OAAO;QACL,MAAM;QACN,SAAS;QACT,UAAU;IACR;IAEL,UAAU;QACR,MAAM;QACN,SAAS;QACT,UAAU;IACZ;IACA,SAAS;QAAC;YACR,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KAAE;IACF,YAAY;QAAC;YACX,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KAAE;AAEJ,GAAG;IAAE,YAAY;AAAK;uCAEP,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///D:/stacky%20patel%20next%20js/GPT%20next%20project/nextauth-demo/src/app/api/blogs/%5Bid%5D/dislike/route.js"],"sourcesContent":["// /app/api/blogs/[id]/dislike/route.js\nimport { connectDB } from \"@/lib/mongodb\";\nimport Blog from \"@/models/Blog\";\nimport { NextResponse } from \"next/server\";\nimport { getServerSession } from \"next-auth\";\n\nexport async function POST(req, { params }) {\n  await connectDB();\n  const id = ((await params).id);\n\n  const session = await getServerSession();\n  if (!session) {\n    return NextResponse.json({ success: false, error: \"Not authenticated\" }, { status: 401 });\n  }\n  const userId = session.user.id;\n\n  try {\n    const blog = await Blog.findById(id);\n    if (!blog) {\n      return NextResponse.json({ success: false, error: \"Blog not found\" }, { status: 404 });\n    }\n\n    if (blog.dislikedBy.includes(userId)) {\n      return NextResponse.json({ success: false, error: \"Already disliked\" });\n    }\n\n     if (blog.likedBy.includes(userId)) {\n      blog.likedBy.pull(userId);\n      blog.likes -= 1;\n    }\n\n    // add dislike\n    blog.dislikedBy.push(userId);\n    blog.dislikes += 1;\n\n    await blog.save();\n\n    return NextResponse.json({ success: true, blog });\n  } catch (err) {\n    return NextResponse.json({ success: false, error: err.message });\n  }\n}\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AACvC;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE;IACxC,MAAM,IAAA,oIAAS;IACf,MAAM,KAAM,CAAC,MAAM,MAAM,EAAE,EAAE;IAE7B,MAAM,UAAU,MAAM,IAAA,2JAAgB;IACtC,IAAI,CAAC,SAAS;QACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAoB,GAAG;YAAE,QAAQ;QAAI;IACzF;IACA,MAAM,SAAS,QAAQ,IAAI,CAAC,EAAE;IAE9B,IAAI;QACF,MAAM,OAAO,MAAM,kIAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEA,IAAI,KAAK,UAAU,CAAC,QAAQ,CAAC,SAAS;YACpC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAmB;QACvE;QAEC,IAAI,KAAK,OAAO,CAAC,QAAQ,CAAC,SAAS;YAClC,KAAK,OAAO,CAAC,IAAI,CAAC;YAClB,KAAK,KAAK,IAAI;QAChB;QAEA,cAAc;QACd,KAAK,UAAU,CAAC,IAAI,CAAC;QACrB,KAAK,QAAQ,IAAI;QAEjB,MAAM,KAAK,IAAI;QAEf,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,KAAK;QACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,IAAI,OAAO;QAAC;IAChE;AACF","debugId":null}}]
}